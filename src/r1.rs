// Generated by rust-peg. Do not edit.
#![allow(non_snake_case_functions, unused_variable)]

fn slice_eq(input: &str, pos: uint, m: &str) -> Result<(uint, ()), uint> {
    #![inline]
    #![allow(dead_code)]
    let l = m.len();
    if input.len() >= pos + l &&
           input.as_bytes().slice(pos, pos + l) == m.as_bytes() {
        Ok((pos + l, ()))
    } else { Err(pos) }
}
fn any_char(input: &str, pos: uint) -> Result<(uint, ()), uint> {
    #![inline]
    #![allow(dead_code)]
    if input.len() > pos {
        Ok((input.char_range_at(pos).next, ()))
    } else { Err(pos) }
}
fn pos_to_line(input: &str, pos: uint) -> uint {
    let mut remaining = pos as int;
    let mut lineno: uint = 1;
    for line in input.lines() {
        remaining -= (line.len() as int) + 1;
        if remaining <= 0 { return lineno; }
        lineno += 1;
    }
    return lineno;
}
fn parse_core(input: &str, pos: uint) ->
 Result<(uint, Box<super::CoreLanguage>), uint> {
    {
        let choice_res =
            {
                let start_pos = pos;
                {
                    let seq_res = parse_object(input, pos);
                    match seq_res {
                        Err(pos) => { Err(pos) }
                        Ok((pos, o)) => {
                            {
                                let match_str = input.slice(start_pos, pos);
                                Ok((pos, box() o))
                            }
                        }
                    }
                }
            };
        match choice_res {
            Ok((pos, value)) => Ok((pos, value)),
            Err(..) => {
                let choice_res =
                    {
                        let start_pos = pos;
                        {
                            let seq_res = parse_variable(input, pos);
                            match seq_res {
                                Err(pos) => { Err(pos) }
                                Ok((pos, v)) => {
                                    {
                                        let match_str =
                                            input.slice(start_pos, pos);
                                        Ok((pos, box() super::Variable(v)))
                                    }
                                }
                            }
                        }
                    };
                match choice_res {
                    Ok((pos, value)) => Ok((pos, value)),
                    Err(..) => {
                        let choice_res =
                            {
                                let start_pos = pos;
                                {
                                    let seq_res = slice_eq(input, pos, "(");
                                    match seq_res {
                                        Err(pos) => { Err(pos) }
                                        Ok((pos, _)) => {
                                            {
                                                let seq_res =
                                                    slice_eq(input, pos,
                                                             "quote");
                                                match seq_res {
                                                    Err(pos) => { Err(pos) }
                                                    Ok((pos, _)) => {
                                                        {
                                                            let seq_res =
                                                                parse_object(input,
                                                                             pos);
                                                            match seq_res {
                                                                Err(pos) => {
                                                                    Err(pos)
                                                                }
                                                                Ok((pos, o))
                                                                => {
                                                                    {
                                                                        let seq_res =
                                                                            slice_eq(input,
                                                                                     pos,
                                                                                     ")");
                                                                        match seq_res
                                                                            {
                                                                            Err(pos)
                                                                            =>
                                                                            {
                                                                                Err(pos)
                                                                            }
                                                                            Ok((pos,
                                                                                _))
                                                                            =>
                                                                            {
                                                                                {
                                                                                    let match_str =
                                                                                        input.slice(start_pos,
                                                                                                    pos);
                                                                                    Ok((pos,
                                                                                        box() super::Quote(box() o)))
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            };
                        match choice_res {
                            Ok((pos, value)) => Ok((pos, value)),
                            Err(..) => {
                                let choice_res =
                                    {
                                        let start_pos = pos;
                                        {
                                            let seq_res =
                                                slice_eq(input, pos, "(");
                                            match seq_res {
                                                Err(pos) => { Err(pos) }
                                                Ok((pos, _)) => {
                                                    {
                                                        let seq_res =
                                                            slice_eq(input,
                                                                     pos,
                                                                     "lambda");
                                                        match seq_res {
                                                            Err(pos) => {
                                                                Err(pos)
                                                            }
                                                            Ok((pos, _)) => {
                                                                {
                                                                    let seq_res =
                                                                        slice_eq(input,
                                                                                 pos,
                                                                                 "(");
                                                                    match seq_res
                                                                        {
                                                                        Err(pos)
                                                                        => {
                                                                            Err(pos)
                                                                        }
                                                                        Ok((pos,
                                                                            _))
                                                                        => {
                                                                            {
                                                                                let seq_res =
                                                                                    {
                                                                                        let mut repeat_pos =
                                                                                            pos;
                                                                                        let mut repeat_value =
                                                                                            vec!();
                                                                                        loop 
                                                                                             {
                                                                                            let pos =
                                                                                                repeat_pos;
                                                                                            let step_res =
                                                                                                parse_variable(input,
                                                                                                               pos);
                                                                                            match step_res
                                                                                                {
                                                                                                Ok((newpos,
                                                                                                    value))
                                                                                                =>
                                                                                                {
                                                                                                    repeat_pos
                                                                                                        =
                                                                                                        newpos;
                                                                                                    repeat_value.push(value);
                                                                                                }
                                                                                                Err(..)
                                                                                                =>
                                                                                                {
                                                                                                    break
                                                                                                        ;
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                        if repeat_value.len()
                                                                                               >=
                                                                                               1u
                                                                                           {
                                                                                            Ok((repeat_pos,
                                                                                                repeat_value))
                                                                                        } else {
                                                                                            Err(repeat_pos)
                                                                                        }
                                                                                    };
                                                                                match seq_res
                                                                                    {
                                                                                    Err(pos)
                                                                                    =>
                                                                                    {
                                                                                        Err(pos)
                                                                                    }
                                                                                    Ok((pos,
                                                                                        vs))
                                                                                    =>
                                                                                    {
                                                                                        {
                                                                                            let seq_res =
                                                                                                slice_eq(input,
                                                                                                         pos,
                                                                                                         ")");
                                                                                            match seq_res
                                                                                                {
                                                                                                Err(pos)
                                                                                                =>
                                                                                                {
                                                                                                    Err(pos)
                                                                                                }
                                                                                                Ok((pos,
                                                                                                    _))
                                                                                                =>
                                                                                                {
                                                                                                    {
                                                                                                        let seq_res =
                                                                                                            parse_core(input,
                                                                                                                       pos);
                                                                                                        match seq_res
                                                                                                            {
                                                                                                            Err(pos)
                                                                                                            =>
                                                                                                            {
                                                                                                                Err(pos)
                                                                                                            }
                                                                                                            Ok((pos,
                                                                                                                e))
                                                                                                            =>
                                                                                                            {
                                                                                                                {
                                                                                                                    let seq_res =
                                                                                                                        slice_eq(input,
                                                                                                                                 pos,
                                                                                                                                 ")");
                                                                                                                    match seq_res
                                                                                                                        {
                                                                                                                        Err(pos)
                                                                                                                        =>
                                                                                                                        {
                                                                                                                            Err(pos)
                                                                                                                        }
                                                                                                                        Ok((pos,
                                                                                                                            _))
                                                                                                                        =>
                                                                                                                        {
                                                                                                                            {
                                                                                                                                let match_str =
                                                                                                                                    input.slice(start_pos,
                                                                                                                                                pos);
                                                                                                                                Ok((pos,
                                                                                                                                    box() super::Lambda(vs,
                                                                                                                                                        e)))
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    };
                                match choice_res {
                                    Ok((pos, value)) => Ok((pos, value)),
                                    Err(..) => {
                                        let choice_res =
                                            {
                                                let start_pos = pos;
                                                {
                                                    let seq_res =
                                                        slice_eq(input, pos,
                                                                 "(");
                                                    match seq_res {
                                                        Err(pos) => {
                                                            Err(pos)
                                                        }
                                                        Ok((pos, _)) => {
                                                            {
                                                                let seq_res =
                                                                    slice_eq(input,
                                                                             pos,
                                                                             "if");
                                                                match seq_res
                                                                    {
                                                                    Err(pos)
                                                                    => {
                                                                        Err(pos)
                                                                    }
                                                                    Ok((pos,
                                                                        _)) =>
                                                                    {
                                                                        {
                                                                            let seq_res =
                                                                                parse_core(input,
                                                                                           pos);
                                                                            match seq_res
                                                                                {
                                                                                Err(pos)
                                                                                =>
                                                                                {
                                                                                    Err(pos)
                                                                                }
                                                                                Ok((pos,
                                                                                    p))
                                                                                =>
                                                                                {
                                                                                    {
                                                                                        let seq_res =
                                                                                            parse_core(input,
                                                                                                       pos);
                                                                                        match seq_res
                                                                                            {
                                                                                            Err(pos)
                                                                                            =>
                                                                                            {
                                                                                                Err(pos)
                                                                                            }
                                                                                            Ok((pos,
                                                                                                t))
                                                                                            =>
                                                                                            {
                                                                                                {
                                                                                                    let seq_res =
                                                                                                        parse_core(input,
                                                                                                                   pos);
                                                                                                    match seq_res
                                                                                                        {
                                                                                                        Err(pos)
                                                                                                        =>
                                                                                                        {
                                                                                                            Err(pos)
                                                                                                        }
                                                                                                        Ok((pos,
                                                                                                            e))
                                                                                                        =>
                                                                                                        {
                                                                                                            {
                                                                                                                let seq_res =
                                                                                                                    slice_eq(input,
                                                                                                                             pos,
                                                                                                                             ")");
                                                                                                                match seq_res
                                                                                                                    {
                                                                                                                    Err(pos)
                                                                                                                    =>
                                                                                                                    {
                                                                                                                        Err(pos)
                                                                                                                    }
                                                                                                                    Ok((pos,
                                                                                                                        _))
                                                                                                                    =>
                                                                                                                    {
                                                                                                                        {
                                                                                                                            let match_str =
                                                                                                                                input.slice(start_pos,
                                                                                                                                            pos);
                                                                                                                            Ok((pos,
                                                                                                                                box() super::If(p,
                                                                                                                                                t,
                                                                                                                                                e)))
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            };
                                        match choice_res {
                                            Ok((pos, value)) =>
                                            Ok((pos, value)),
                                            Err(..) => {
                                                let choice_res =
                                                    {
                                                        let start_pos = pos;
                                                        {
                                                            let seq_res =
                                                                slice_eq(input,
                                                                         pos,
                                                                         "(");
                                                            match seq_res {
                                                                Err(pos) => {
                                                                    Err(pos)
                                                                }
                                                                Ok((pos, _))
                                                                => {
                                                                    {
                                                                        let seq_res =
                                                                            slice_eq(input,
                                                                                     pos,
                                                                                     "set!");
                                                                        match seq_res
                                                                            {
                                                                            Err(pos)
                                                                            =>
                                                                            {
                                                                                Err(pos)
                                                                            }
                                                                            Ok((pos,
                                                                                _))
                                                                            =>
                                                                            {
                                                                                {
                                                                                    let seq_res =
                                                                                        parse_variable(input,
                                                                                                       pos);
                                                                                    match seq_res
                                                                                        {
                                                                                        Err(pos)
                                                                                        =>
                                                                                        {
                                                                                            Err(pos)
                                                                                        }
                                                                                        Ok((pos,
                                                                                            v))
                                                                                        =>
                                                                                        {
                                                                                            {
                                                                                                let seq_res =
                                                                                                    parse_core(input,
                                                                                                               pos);
                                                                                                match seq_res
                                                                                                    {
                                                                                                    Err(pos)
                                                                                                    =>
                                                                                                    {
                                                                                                        Err(pos)
                                                                                                    }
                                                                                                    Ok((pos,
                                                                                                        e))
                                                                                                    =>
                                                                                                    {
                                                                                                        {
                                                                                                            let seq_res =
                                                                                                                slice_eq(input,
                                                                                                                         pos,
                                                                                                                         ")");
                                                                                                            match seq_res
                                                                                                                {
                                                                                                                Err(pos)
                                                                                                                =>
                                                                                                                {
                                                                                                                    Err(pos)
                                                                                                                }
                                                                                                                Ok((pos,
                                                                                                                    _))
                                                                                                                =>
                                                                                                                {
                                                                                                                    {
                                                                                                                        let match_str =
                                                                                                                            input.slice(start_pos,
                                                                                                                                        pos);
                                                                                                                        Ok((pos,
                                                                                                                            box() super::Set(v,
                                                                                                                                             e)))
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    };
                                                match choice_res {
                                                    Ok((pos, value)) =>
                                                    Ok((pos, value)),
                                                    Err(..) => {
                                                        let choice_res =
                                                            {
                                                                let start_pos =
                                                                    pos;
                                                                {
                                                                    let seq_res =
                                                                        slice_eq(input,
                                                                                 pos,
                                                                                 "(");
                                                                    match seq_res
                                                                        {
                                                                        Err(pos)
                                                                        => {
                                                                            Err(pos)
                                                                        }
                                                                        Ok((pos,
                                                                            _))
                                                                        => {
                                                                            {
                                                                                let seq_res =
                                                                                    slice_eq(input,
                                                                                             pos,
                                                                                             "call/cc");
                                                                                match seq_res
                                                                                    {
                                                                                    Err(pos)
                                                                                    =>
                                                                                    {
                                                                                        Err(pos)
                                                                                    }
                                                                                    Ok((pos,
                                                                                        _))
                                                                                    =>
                                                                                    {
                                                                                        {
                                                                                            let seq_res =
                                                                                                parse_core(input,
                                                                                                           pos);
                                                                                            match seq_res
                                                                                                {
                                                                                                Err(pos)
                                                                                                =>
                                                                                                {
                                                                                                    Err(pos)
                                                                                                }
                                                                                                Ok((pos,
                                                                                                    e))
                                                                                                =>
                                                                                                {
                                                                                                    {
                                                                                                        let seq_res =
                                                                                                            slice_eq(input,
                                                                                                                     pos,
                                                                                                                     ")");
                                                                                                        match seq_res
                                                                                                            {
                                                                                                            Err(pos)
                                                                                                            =>
                                                                                                            {
                                                                                                                Err(pos)
                                                                                                            }
                                                                                                            Ok((pos,
                                                                                                                _))
                                                                                                            =>
                                                                                                            {
                                                                                                                {
                                                                                                                    let match_str =
                                                                                                                        input.slice(start_pos,
                                                                                                                                    pos);
                                                                                                                    Ok((pos,
                                                                                                                        box() super::CallCC(e)))
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            };
                                                        match choice_res {
                                                            Ok((pos, value))
                                                            =>
                                                            Ok((pos, value)),
                                                            Err(..) => {
                                                                let start_pos =
                                                                    pos;
                                                                {
                                                                    let seq_res =
                                                                        slice_eq(input,
                                                                                 pos,
                                                                                 "(");
                                                                    match seq_res
                                                                        {
                                                                        Err(pos)
                                                                        => {
                                                                            Err(pos)
                                                                        }
                                                                        Ok((pos,
                                                                            _))
                                                                        => {
                                                                            {
                                                                                let seq_res =
                                                                                    {
                                                                                        let mut repeat_pos =
                                                                                            pos;
                                                                                        let mut repeat_value =
                                                                                            vec!();
                                                                                        loop 
                                                                                             {
                                                                                            let pos =
                                                                                                repeat_pos;
                                                                                            let step_res =
                                                                                                parse_core(input,
                                                                                                           pos);
                                                                                            match step_res
                                                                                                {
                                                                                                Ok((newpos,
                                                                                                    value))
                                                                                                =>
                                                                                                {
                                                                                                    repeat_pos
                                                                                                        =
                                                                                                        newpos;
                                                                                                    repeat_value.push(value);
                                                                                                }
                                                                                                Err(..)
                                                                                                =>
                                                                                                {
                                                                                                    break
                                                                                                        ;
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                        if repeat_value.len()
                                                                                               >=
                                                                                               1u
                                                                                           {
                                                                                            Ok((repeat_pos,
                                                                                                repeat_value))
                                                                                        } else {
                                                                                            Err(repeat_pos)
                                                                                        }
                                                                                    };
                                                                                match seq_res
                                                                                    {
                                                                                    Err(pos)
                                                                                    =>
                                                                                    {
                                                                                        Err(pos)
                                                                                    }
                                                                                    Ok((pos,
                                                                                        es))
                                                                                    =>
                                                                                    {
                                                                                        {
                                                                                            let seq_res =
                                                                                                slice_eq(input,
                                                                                                         pos,
                                                                                                         ")");
                                                                                            match seq_res
                                                                                                {
                                                                                                Err(pos)
                                                                                                =>
                                                                                                {
                                                                                                    Err(pos)
                                                                                                }
                                                                                                Ok((pos,
                                                                                                    _))
                                                                                                =>
                                                                                                {
                                                                                                    {
                                                                                                        let match_str =
                                                                                                            input.slice(start_pos,
                                                                                                                        pos);
                                                                                                        Ok((pos,
                                                                                                            box() super::List(es)))
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
fn parse_object(input: &str, pos: uint) ->
 Result<(uint, super::CoreLanguage), uint> {
    {
        let choice_res =
            {
                let start_pos = pos;
                {
                    let seq_res = parse_bool(input, pos);
                    match seq_res {
                        Err(pos) => { Err(pos) }
                        Ok((pos, v)) => {
                            {
                                let match_str = input.slice(start_pos, pos);
                                Ok((pos, super::Object(v)))
                            }
                        }
                    }
                }
            };
        match choice_res {
            Ok((pos, value)) => Ok((pos, value)),
            Err(..) => {
                let choice_res =
                    {
                        let start_pos = pos;
                        {
                            let seq_res = parse_num(input, pos);
                            match seq_res {
                                Err(pos) => { Err(pos) }
                                Ok((pos, v)) => {
                                    {
                                        let match_str =
                                            input.slice(start_pos, pos);
                                        Ok((pos, super::Object(v)))
                                    }
                                }
                            }
                        }
                    };
                match choice_res {
                    Ok((pos, value)) => Ok((pos, value)),
                    Err(..) => {
                        let start_pos = pos;
                        {
                            let seq_res = parse_string(input, pos);
                            match seq_res {
                                Err(pos) => { Err(pos) }
                                Ok((pos, v)) => {
                                    {
                                        let match_str =
                                            input.slice(start_pos, pos);
                                        Ok((pos, super::Object(v)))
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
fn parse_variable(input: &str, pos: uint) -> Result<(uint, String), uint> {
    {
        let start_pos = pos;
        {
            let seq_res =
                {
                    let mut repeat_pos = pos;
                    let mut repeat_value = vec!();
                    loop  {
                        let pos = repeat_pos;
                        let step_res =
                            if input.len() > pos {
                                let ::std::str::CharRange { ch: ch, next: next
                                        } = input.char_range_at(pos);
                                match ch {
                                    'a' ..'z' | 'A' ..'Z' => Ok((next, ())),
                                    _ => Err(pos),
                                }
                            } else { Err(pos) };
                        match step_res {
                            Ok((newpos, value)) => {
                                repeat_pos = newpos;
                                repeat_value.push(value);
                            }
                            Err(..) => { break ; }
                        }
                    }
                    if repeat_value.len() >= 1u {
                        Ok((repeat_pos, ()))
                    } else { Err(repeat_pos) }
                };
            match seq_res {
                Err(pos) => { Err(pos) }
                Ok((pos, _)) => {
                    {
                        let match_str = input.slice(start_pos, pos);
                        Ok((pos, match_str.to_string()))
                    }
                }
            }
        }
    }
}
fn parse_bool(input: &str, pos: uint) -> Result<(uint, super::Obj), uint> {
    {
        let choice_res =
            {
                let start_pos = pos;
                {
                    let seq_res = slice_eq(input, pos, "#t");
                    match seq_res {
                        Err(pos) => { Err(pos) }
                        Ok((pos, _)) => {
                            {
                                let match_str = input.slice(start_pos, pos);
                                Ok((pos, super::OBool(true)))
                            }
                        }
                    }
                }
            };
        match choice_res {
            Ok((pos, value)) => Ok((pos, value)),
            Err(..) => {
                let start_pos = pos;
                {
                    let seq_res = slice_eq(input, pos, "#f");
                    match seq_res {
                        Err(pos) => { Err(pos) }
                        Ok((pos, _)) => {
                            {
                                let match_str = input.slice(start_pos, pos);
                                Ok((pos, super::OBool(false)))
                            }
                        }
                    }
                }
            }
        }
    }
}
fn parse_num(input: &str, pos: uint) -> Result<(uint, super::Obj), uint> {
    {
        let start_pos = pos;
        {
            let seq_res =
                {
                    let mut repeat_pos = pos;
                    let mut repeat_value = vec!();
                    loop  {
                        let pos = repeat_pos;
                        let step_res =
                            if input.len() > pos {
                                let ::std::str::CharRange { ch: ch, next: next
                                        } = input.char_range_at(pos);
                                match ch {
                                    '0' ..'9' => Ok((next, ())),
                                    _ => Err(pos),
                                }
                            } else { Err(pos) };
                        match step_res {
                            Ok((newpos, value)) => {
                                repeat_pos = newpos;
                                repeat_value.push(value);
                            }
                            Err(..) => { break ; }
                        }
                    }
                    if repeat_value.len() >= 1u {
                        Ok((repeat_pos, ()))
                    } else { Err(repeat_pos) }
                };
            match seq_res {
                Err(pos) => { Err(pos) }
                Ok((pos, _)) => {
                    {
                        let match_str = input.slice(start_pos, pos);
                        Ok((pos,
                            super::OInt(from_str::<i32>(match_str).unwrap())))
                    }
                }
            }
        }
    }
}
fn parse_string(input: &str, pos: uint) -> Result<(uint, super::Obj), uint> {
    {
        let start_pos = pos;
        {
            let seq_res = slice_eq(input, pos, "\"");
            match seq_res {
                Err(pos) => { Err(pos) }
                Ok((pos, _)) => {
                    {
                        let seq_res =
                            {
                                let mut repeat_pos = pos;
                                loop  {
                                    let pos = repeat_pos;
                                    let step_res =
                                        if input.len() > pos {
                                            let ::std::str::CharRange {
                                                    ch: ch, next: next } =
                                                input.char_range_at(pos);
                                            match ch {
                                                '\"' => Err(pos),
                                                _ => Ok((next, ())),
                                            }
                                        } else { Err(pos) };
                                    match step_res {
                                        Ok((newpos, value)) => {
                                            repeat_pos = newpos;
                                        }
                                        Err(..) => { break ; }
                                    }
                                }
                                Ok((repeat_pos, ()))
                            };
                        match seq_res {
                            Err(pos) => { Err(pos) }
                            Ok((pos, _)) => {
                                {
                                    let seq_res = slice_eq(input, pos, "\"");
                                    match seq_res {
                                        Err(pos) => { Err(pos) }
                                        Ok((pos, _)) => {
                                            {
                                                let match_str =
                                                    input.slice(start_pos,
                                                                pos);
                                                Ok((pos,
                                                    super::OStr(match_str.to_string())))
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
pub fn core(input: &str) -> Result<Box<super::CoreLanguage>, String> {
    match parse_core(input, 0) {
        Ok((pos, value)) => {
            if pos == input.len() {
                Ok(value)
            } else {
                Err(format!("Expected end of input at {}" , pos_to_line
                            ( input , pos )))
            }
        }
        Err(pos) => Err(format!("Error at {}" , pos_to_line ( input , pos ))),
    }
}
